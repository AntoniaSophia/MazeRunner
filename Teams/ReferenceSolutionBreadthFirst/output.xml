<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.6rc1 on win32)" generated="20191222 20:20:07.211" rpa="false">
<suite id="s1" name="Run Unit Test" source="D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\run_unit_test.robot">
<test id="s1-t1" name="ExecuteUnitTest">
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/_tmp_unit_test_result</arg>
</arguments>
<msg timestamp="20191222 20:20:07.261" level="INFO" html="yes">Directory '&lt;a href="file://D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\_tmp_unit_test_result"&gt;D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\_tmp_unit_test_result&lt;/a&gt;' already exists.</msg>
<status status="PASS" starttime="20191222 20:20:07.261" endtime="20191222 20:20:07.261"></status>
</kw>
<kw name="Empty Directory" library="OperatingSystem">
<doc>Deletes all the content from the given directory.</doc>
<arguments>
<arg>D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/_tmp_unit_test_result</arg>
</arguments>
<msg timestamp="20191222 20:20:07.261" level="INFO" html="yes">Listing contents of directory '&lt;a href="file://D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\_tmp_unit_test_result"&gt;D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\_tmp_unit_test_result&lt;/a&gt;'.</msg>
<msg timestamp="20191222 20:20:07.261" level="INFO" html="yes">Emptied directory '&lt;a href="file://D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\_tmp_unit_test_result"&gt;D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\_tmp_unit_test_result&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191222 20:20:07.261" endtime="20191222 20:20:07.261"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pytest</arg>
<arg>cwd=D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/tests</arg>
<arg>stdout=D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/_tmp_unit_test_result/UnitTestResult.txt</arg>
</arguments>
<msg timestamp="20191222 20:20:07.269" level="INFO">Starting process:
pytest</msg>
<msg timestamp="20191222 20:20:07.272" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191222 20:20:07.992" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191222 20:20:07.261" endtime="20191222 20:20:07.992"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>coverage</arg>
<arg>run</arg>
<arg>-m</arg>
<arg>pytest</arg>
<arg>cwd=D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/tests</arg>
<arg>env:COVERAGE_FILE=D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/tests/.coverage</arg>
</arguments>
<msg timestamp="20191222 20:20:07.992" level="INFO">Starting process:
coverage run -m pytest</msg>
<msg timestamp="20191222 20:20:08.001" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191222 20:20:08.951" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191222 20:20:07.992" endtime="20191222 20:20:08.961"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>coverage</arg>
<arg>report</arg>
<arg>-m</arg>
<arg>cwd=D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/tests</arg>
<arg>env:COVERAGE_FILE=D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/tests/.coverage</arg>
<arg>stdout=D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/_tmp_unit_test_result/UnitTestResult.txt</arg>
</arguments>
<msg timestamp="20191222 20:20:08.961" level="INFO">Starting process:
coverage report -m</msg>
<msg timestamp="20191222 20:20:08.961" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20191222 20:20:09.191" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20191222 20:20:08.961" endtime="20191222 20:20:09.191"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/_tmp_unit_test_result/UnitTestResult.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20191222 20:20:09.191" level="INFO" html="yes">Getting file '&lt;a href="file://D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\_tmp_unit_test_result\UnitTestResult.txt"&gt;D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\_tmp_unit_test_result\UnitTestResult.txt&lt;/a&gt;'.</msg>
<msg timestamp="20191222 20:20:09.191" level="INFO">${result} = Name                                                                                                                   Stmts   Miss  Cover   Missing
---------------------------------------------------...</msg>
<status status="PASS" starttime="20191222 20:20:09.191" endtime="20191222 20:20:09.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>\n ${result}</arg>
<arg>console=${True}</arg>
</arguments>
<msg timestamp="20191222 20:20:09.191" level="INFO">
Name                                                                                                                   Stmts   Miss  Cover   Missing
----------------------------------------------------------------------------------------------------------------------------------------------------
D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\MazeSolverAlgoBreadthFirst.py     153     23    85%   26, 29, 32, 35, 38, 49-50, 65-67, 70, 85, 107, 111, 139-142, 145, 226-231
</msg>
<status status="PASS" starttime="20191222 20:20:09.191" endtime="20191222 20:20:09.191"></status>
</kw>
<kw name="Remove Files" library="OperatingSystem">
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<arguments>
<arg>D:\\_Projects\\MazeRunner_2020\\MazeRunner\\MazeRunner\\Teams\\ReferenceSolutionBreadthFirst/tests/.coverage</arg>
</arguments>
<msg timestamp="20191222 20:20:09.201" level="INFO" html="yes">Removed file '&lt;a href="file://D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\tests\.coverage"&gt;D:\_Projects\MazeRunner_2020\MazeRunner\MazeRunner\Teams\ReferenceSolutionBreadthFirst\tests\.coverage&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20191222 20:20:09.191" endtime="20191222 20:20:09.201"></status>
</kw>
<status status="PASS" starttime="20191222 20:20:07.261" endtime="20191222 20:20:09.201" critical="yes"></status>
</test>
<doc>Example test cases using the keyword-driven testing approach.

All tests contain a workflow constructed from keywords in
``CalculatorLibrary.py``. Creating new tests or editing
existing is easy even for people without programming skills.

The _keyword-driven_ appoach works well for normal test
automation, but the _gherkin_ style might be even better
if also business people need to understand tests. If the
same workflow needs to repeated multiple times, it is best
to use to the _data-driven_ approach.
Start command: robot &lt;robotfile&gt; , e.g. robot keyword_driven.robot</doc>
<status status="PASS" starttime="20191222 20:20:07.211" endtime="20191222 20:20:09.201"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Run Unit Test">Run Unit Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
